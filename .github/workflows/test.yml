name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Run unit tests
      env:
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      run: |
        cd backend
        pytest --cov=app --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.xml
        flags: unittests
        name: codecov-umbrella

  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Start services with Docker Compose
      run: docker-compose up -d
    
    - name: Wait for backend to be ready
      run: |
        timeout 60 sh -c 'until curl -f http://localhost:8000/health; do sleep 2; done'
    
    - name: Install Playwright dependencies
      run: |
        cd tests
        npm ci
        npx playwright install --with-deps chromium
    
    - name: Generate test fixtures
      run: |
        pip install pillow
        cd tests/fixtures
        python3 generate_fixtures.py
    
    - name: Run E2E tests
      run: |
        cd tests
        npm test -- --reporter=html
    
    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: tests/playwright-report/
        retention-days: 30
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: tests/test-results/
        retention-days: 30
    
    - name: Docker Compose logs
      if: failure()
      run: docker-compose logs

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        pip install flake8 black mypy
    
    - name: Run flake8
      run: |
        cd backend
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Check formatting with black
      run: |
        cd backend
        black --check app/

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build backend Docker image
      run: docker build -t image2svg-backend:test backend/
    
    - name: Build frontend Docker image
      run: docker build -t image2svg-frontend:test frontend/
    
    - name: Test backend container
      run: |
        docker run -d --name test-backend \
          -e REDIS_HOST=redis \
          -e CACHE_ENABLED=false \
          image2svg-backend:test
        sleep 5
        docker logs test-backend
        docker rm -f test-backend
